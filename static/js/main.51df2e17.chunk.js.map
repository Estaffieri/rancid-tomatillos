{"version":3,"sources":["Components/MoviePoster/MoviePoster.js","Components/MovieContainer/MovieContainer.js","Components/MovieDetails/MovieDetails.js","apiCalls.js","Components/Header/Header.js","Components/Search/Search.js","Components/App/App.js","reportWebVitals.js","index.js"],"names":["MoviePoster","id","image","title","rating","displayMovieDetails","to","tabIndex","className","src","alt","toFixed","MovieContainer","movies","posters","map","movie","poster_path","average_rating","MovieDetails","props","goBackToMain","setState","movieDetails","movieTrailer","displayMovieTrailers","state","movieTrailers","video","url","key","error","parseInt","this","fetch","then","response","json","selectedMovie","getTrailers","catch","errorMessage","toString","videos","loadMovieTrailers","details","onClick","toUpperCase","tagline","overview","runtime","Date","release_date","toLocaleDateString","genres","Intl","NumberFormat","format","budget","revenue","backdrop_path","showThumbs","width","data-testid","Component","Header","sortMovieRatings","Search","searchByInput","e","preventDefault","input","target","value","toLowerCase","inputValue","onChange","type","placeholder","App","sortedMovies","sort","a","b","getUserInput","movieData","exact","path","render","filterMoviesByTitle","match","params","filter","includes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","router","basename","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.51df2e17.chunk.js","sourcesContent":["import React from 'react';\nimport './MoviePoster.css'\nimport { Link } from 'react-router-dom';\n\nconst MoviePoster = ({ id, image, title, rating, displayMovieDetails }) => {\n    return (\n      <Link to={`/movie/${id}`}\n        tabIndex={0}\n        className=\"poster\">\n          <img src={image} id={id} className=\"poster-image\" alt={title} />\n          <h3 className=\"title\">{title}</h3>\n          <p className=\"rating\">Average Rating: &#11088;{rating.toFixed(1)}</p>\n      </Link>\n    );\n}\n\nexport default MoviePoster;\n","import React from 'react';\nimport MoviePoster from '../MoviePoster/MoviePoster';\nimport './MovieContainer.css';\n\nconst MovieContainer = ({ movies, displayMovieDetails }) => {\n\n  const posters = movies.map(movie => {\n    return (\n        <MoviePoster\n          id={movie.id}\n          image={movie.poster_path}\n          title={movie.title}\n          rating={movie.average_rating}\n          displayMovieDetails={displayMovieDetails}\n          key={movie.id}\n        />\n    );\n  })\n\n  return (\n       <section className =\"movies-container\">\n      { posters }\n      </section>\n  )\n}\n\nexport default MovieContainer;\n","import React, { Component } from \"react\";\nimport \"./MovieDetails.css\";\nimport { getSelectedMovie, getMovieTrailers } from '../../apiCalls';\nimport { Link } from 'react-router-dom';\nimport ReactPlayer from 'react-player';\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport { Carousel } from 'react-responsive-carousel';\n\nclass MovieDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movieDetails: {},\n      movieTrailers: [],\n      error: ''\n    }\n  }\n\n  componentDidMount() {\n    getSelectedMovie(parseInt(this.props.id))\n      .then(selectedMovie => {\n        this.setState({movieDetails: selectedMovie.movie})\n        this.getTrailers()\n      })\n      .catch(errorMessage => this.setState({error: errorMessage.toString()}))\n\n  }\n\n  getTrailers() {\n    getMovieTrailers(parseInt(this.props.id))\n    .then(movieTrailers => this.setState({movieTrailers: movieTrailers.videos}))\n    .then(() => this.loadMovieTrailers())\n    .catch(errorMessage => this.setState({error: errorMessage.toString()}))\n  }\n\n  goBackToMain = () => {\n    this.setState({movieDetails: {}})\n    this.setState({movieTrailer: []})\n  }\n\n  displayMovieTrailers = () => {\n    const selectedMovieTrailers = this.state.movieTrailers.map(video => {\n    return (<ReactPlayer key={video.id}\n    url={`https://www.youtube.com/embed/${video.key}`} />)\n    })\n    return selectedMovieTrailers\n  }\n\n  render() {\n  let details;\n\n  if(!this.state.movieDetails.id) {\n    return <h1>Loading...</h1>\n  } else {\n    details = (\n      <section>\n      <section className=\"go-back-section\">\n        <Link to=\"/\">\n          <button onClick={() => this.goBackToMain()} className=\"back-button\">GO BACK</button>\n        </Link>\n      </section>\n      <section className=\"header-info\">\n        <h3>{this.state.movieDetails.title.toUpperCase()}</h3>\n          <p className=\"tagline\">{this.state.movieDetails.tagline}</p>\n          <p className=\"tagline\">Average Rating: &#11088; {this.state.movieDetails.average_rating.toFixed(1)}</p>\n      </section>\n        <section className=\"movie-details\">\n          <section className=\"movie-facts\">\n            <section>\n              <img\n               src={this.state.movieDetails.poster_path}\n               className=\"movie-image\"\n               alt={this.state.movieDetails.title}/>\n              </section>\n              <section className=\"movie-highlights\">\n                <h4>Movie Summary:</h4>\n                <p>{this.state.movieDetails.overview}</p>\n                <h4>Movie Runtime:</h4>\n                <p>{this.state.movieDetails.runtime} mins</p>\n                <h4>Released:</h4>\n                <p>{new Date(this.state.movieDetails.release_date).toLocaleDateString()}</p>\n                <h4>Genre:</h4>\n                <p> {this.state.movieDetails.genres[0]}</p>\n                <h4>Budget:</h4>\n                <p> ${new Intl.NumberFormat('en-US').format(this.state.movieDetails.budget)}</p>\n                <h4>Revenue:</h4>\n                <p> ${new Intl.NumberFormat('en-US').format(this.state.movieDetails.revenue)}</p>\n              </section>\n            </section>\n          <section className=\"movie-info\">\n          <img src={this.state.movieDetails.backdrop_path}\n           className=\"backdrop-image\"\n           alt={this.state.movieDetails.title} />\n            <section className=\"movie-trailers\">\n              <Carousel showThumbs={false} width={650}>\n                {this.state.movieTrailers.map(video => {\n                    return (<ReactPlayer data-testid={video.id} key={video.id}\n                    url={`https://www.youtube.com/embed/${video.key}`} />)\n                  })\n                }\n              </Carousel>\n            </section>\n          </section>\n        </section>\n      </section>\n    );\n\n    return (\n      <section className=\"movie-detail-view\">\n         { details }\n      </section>\n    )\n  }\n}\n}\n\nexport default MovieDetails;\n","export const getAllMovies = () => {\n  return fetch('https://rancid-tomatillos.herokuapp.com/api/v2/movies')\n    .then(response => response.json())\n}\n\nexport const getSelectedMovie = (id) => {\n  return fetch(`https://rancid-tomatillos.herokuapp.com/api/v2/movies/${id}`)\n    .then(response => response.json())\n}\n\nexport const getMovieTrailers = (id) => {\n  return fetch(`https://rancid-tomatillos.herokuapp.com/api/v2/movies/${id}/videos`)\n    .then(response => response.json())\n}\n","import React from 'react';\n\nconst Header = (props) => {\n\n  return(\n    <section className=\"filtering-buttons\">\n      <button onClick={() => props.sortMovieRatings(\"best\")}>\n        Ratings Best to Worst\n      </button>\n      <button onClick={() => props.sortMovieRatings(\"worst\")}>\n        Ratings Worst to Best\n      </button>\n    </section>\n  )\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport './Search.css';\n\nclass Search extends Component {\n    constructor() {\n        super()\n        this.state = {\n            input: \"\"\n        }\n    }\n    searchByInput = (e) => {\n        e.preventDefault()\n        this.setState({input: e.target.value.toLowerCase()})\n        this.props.inputValue(e.target.value)\n    }\n    render() {\n        return(\n            <input onChange={this.searchByInput} type=\"text\" value={this.state.input} placeholder=\"Search by Title\"></input>\n        )\n    }\n\n}\n\nexport default Search;\n","import React, { Component } from 'react';\nimport MovieContainer from '../MovieContainer/MovieContainer';\nimport MovieDetails from '../MovieDetails/MovieDetails';\nimport Header from '../Header/Header';\nimport './App.css';\nimport { getAllMovies } from '../../apiCalls.js'\nimport { Route } from \"react-router-dom\";\nimport Search from '../Search/Search';\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      movies: [],\n      error: '',\n      input: ''\n    };\n  }\n\n  componentDidMount() {\n    getAllMovies().then(movieData => this.setState({movies: movieData.movies}))\n    .catch(errorMessage => this.setState({error: errorMessage.toString()}))\n  }\n\n  sortMovieRatings = (input) => {\n    let sortedMovies;\n\n    if(input === \"best\") {\n       sortedMovies = this.state.movies.sort(\n        (a, b) => b.average_rating - a.average_rating\n      );\n    } else {\n        sortedMovies = this.state.movies.sort(\n        (a, b) => a.average_rating - b.average_rating\n      );\n    }\n    this.setState({ movies: sortedMovies });\n  }\n\n  getUserInput = (inputValue) => {\n    this.setState({input: inputValue})\n  }\n\n  get filterMoviesByTitle() {\n   const filteredMovies = this.state.movies.filter(movie => {\n     return movie.title.toLowerCase().includes(this.state.input)\n    })\n\n   return filteredMovies\n  }\n\n  render() {\n    return (\n      <main>\n        <header tabIndex={0}>\n          <section className=\"logo\">\n            <h1 className=\"tomato\">&#x1F345;</h1>\n            <h1 className=\"title\">RANCID TOMATILLOS</h1>\n            <h1 className=\"tomato\">&#x1F345;</h1>\n          </section>\n            <Route exact path=\"/\"\n              render={() => {\n              return (\n              <section>\n                <section className=\"search\">\n                  <Search inputValue={this.getUserInput} />\n                </section>\n                <Header sortMovieRatings={this.sortMovieRatings} />\n              </section>)\n            }}\n            />\n        </header>\n\n        <Route\n          exact\n          path=\"/\"\n          render={() => {\n            return <MovieContainer movies={this.filterMoviesByTitle} />;\n          }}\n        />\n\n        <Route\n          exact\n          path=\"/movie/:id\"\n          render={({ match }) => {\n            return <MovieDetails id={match.params.id} key={match.params.id} />;\n          }}\n        />\n      </main>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport { BrowserRouter } from \"react-router-dom\";\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nconst router = <BrowserRouter basename='/rancid-tomatillos'><App /></BrowserRouter>\n\nReactDOM.render(\n router,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}